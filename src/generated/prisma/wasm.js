
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AlumnoScalarFieldEnum = {
  id_alumno: 'id_alumno',
  matricula: 'matricula',
  nombre: 'nombre',
  apellido_paterno: 'apellido_paterno',
  apellido_materno: 'apellido_materno',
  email: 'email',
  celular: 'celular',
  open_pay_id: 'open_pay_id',
  fecha_alta: 'fecha_alta',
  fecha_modificacion: 'fecha_modificacion'
};

exports.Prisma.Cat_estatusScalarFieldEnum = {
  id_cat_estatus: 'id_cat_estatus',
  clave: 'clave',
  descripcion: 'descripcion',
  valor: 'valor'
};

exports.Prisma.Configuracion_cronScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  expresion_cron: 'expresion_cron'
};

exports.Prisma.Configuracion_generalScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  valor: 'valor'
};

exports.Prisma.PedidosScalarFieldEnum = {
  id_pedido: 'id_pedido',
  id_alumno: 'id_alumno',
  identificador_pago: 'identificador_pago',
  identificador_pedido: 'identificador_pedido',
  sku: 'sku',
  id_cat_estatus: 'id_cat_estatus',
  tipo_pago: 'tipo_pago',
  producto_servicio_motivo_pago: 'producto_servicio_motivo_pago',
  concepto_pago: 'concepto_pago',
  ciclo: 'ciclo',
  mes: 'mes',
  anio: 'anio',
  pago: 'pago',
  fecha_vigencia_pago: 'fecha_vigencia_pago',
  link_de_pago: 'link_de_pago',
  concepto: 'concepto',
  transaccion_Id: 'transaccion_Id',
  fecha_carga: 'fecha_carga',
  fecha_pago: 'fecha_pago',
  monto_real_pago: 'monto_real_pago'
};

exports.Prisma.TarjetasScalarFieldEnum = {
  id: 'id',
  numero_tarjeta: 'numero_tarjeta',
  token: 'token',
  id_alumno: 'id_alumno',
  nombre_tarjeta: 'nombre_tarjeta',
  tipo: 'tipo',
  activa: 'activa',
  titular: 'titular',
  vencimiento: 'vencimiento',
  eliminada: 'eliminada',
  telefono: 'telefono',
  ciudad: 'ciudad',
  postal: 'postal'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.alumnoOrderByRelevanceFieldEnum = {
  matricula: 'matricula',
  nombre: 'nombre',
  apellido_paterno: 'apellido_paterno',
  apellido_materno: 'apellido_materno',
  email: 'email',
  celular: 'celular',
  open_pay_id: 'open_pay_id'
};

exports.Prisma.cat_estatusOrderByRelevanceFieldEnum = {
  clave: 'clave',
  descripcion: 'descripcion'
};

exports.Prisma.configuracion_cronOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  expresion_cron: 'expresion_cron'
};

exports.Prisma.configuracion_generalOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  valor: 'valor'
};

exports.Prisma.pedidosOrderByRelevanceFieldEnum = {
  identificador_pago: 'identificador_pago',
  identificador_pedido: 'identificador_pedido',
  tipo_pago: 'tipo_pago',
  producto_servicio_motivo_pago: 'producto_servicio_motivo_pago',
  concepto_pago: 'concepto_pago',
  link_de_pago: 'link_de_pago',
  concepto: 'concepto',
  transaccion_Id: 'transaccion_Id'
};

exports.Prisma.tarjetasOrderByRelevanceFieldEnum = {
  numero_tarjeta: 'numero_tarjeta',
  token: 'token',
  nombre_tarjeta: 'nombre_tarjeta',
  tipo: 'tipo',
  titular: 'titular',
  vencimiento: 'vencimiento',
  telefono: 'telefono',
  ciudad: 'ciudad',
  postal: 'postal'
};


exports.Prisma.ModelName = {
  alumno: 'alumno',
  cat_estatus: 'cat_estatus',
  configuracion_cron: 'configuracion_cron',
  configuracion_general: 'configuracion_general',
  pedidos: 'pedidos',
  tarjetas: 'tarjetas'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
